from turtle import Turtle, Screen
import cv2
from screenshot import ScreenShot 

dot =Turtle()
screen = Screen()
screenshot = ScreenShot()

def image_component():
    import cv2
    img = cv2.imread("knowmen.png", cv2.IMREAD_UNCHANGED)   #第一引数を指定のファイル名にすればカラーならなんでも行ける
    trans_img = img.transpose(1,0,2)[:,::-1]         #カラー画像読み込むとなぜか横向きになるので90度回転させる
    h,w,c = trans_img.shape
    print(f"height: {h}\nwidth: {w}\nchannel: {c}")
    pos_rgb = trans_img[h-1,w-1]   #指定した座標のBGRを抽出
    print(pos_rgb)
    return trans_img, h, w

def settings():
    screen.colormode(255)
    screen.setup(0.6,0.8)             #PCの画面の縦横を1,1(ピクセル指定も可)として比率で表示するスクリーンサイズ決定
    screen.screensize(1000,1000)      #描画できるスクリーンサイズを指定
    screen.delay(0)                   #speed.(10)より高速にしたいのでアニメーションのdelayを0に指定
    screen.tracer(2000,0)             #もっと高速にしたいので100ごとにまとめて処理するように設定
    screen.title("Pixelization App")  #window title bar

def draw_pixel():
    dot.shape("circle")
    dot.speed(10)               # 0 = "fastest"でアニメーションなしになる--> ならなかった！
    dot.penup()
    dot.setpos(x-100,y-100)     #点描開始位置を(0,0)からずらす-->(x-400,y-300)
    dot.color((r,g,b),(r,g,b))
    dot.shapesize(0.2,0.2)      #スタンプサイズ変更(×0.5)
    dot.stamp()
    dot.penup()                 #1行終わったらペン上げて移動


settings()
img, h, w = image_component()

for x in range(1,h+1,5):
    for y in range(1,w+1,5):
        position = [x,y]        #全座標の抽出完了
        pos_rgb = img[x-1,y-1]
        b = pos_rgb[0]          #OpenCV-> BGR出力, turtle-> RGB出力なので注意!!
        g = pos_rgb[1]
        r = pos_rgb[2]
        print(f"x:{x}, y:{y}, RGB:{r,g,b}")
        draw_pixel()

print(screen.canvheight)
#screen.listen()
screen.exitonclick()  
